[{"body":"@alt ありがとうございます！\n\n[シンタックスハイライトの修正](/muiscript/items/b4ca1773580317e7112e/patches/62814) by [alt](/alt) 2019/01/30 18:02\n","created_at":"2019-02-16T11:58:08+09:00","id":"87788bd04277521c7a66","rendered_body":"\u003cp\u003e\u003ca href=\"/alt\" class=\"user-mention js-hovercard\" title=\"alt\" data-hovercard-target-type=\"user\" data-hovercard-target-name=\"alt\"\u003e@alt\u003c/a\u003e ありがとうございます！\u003c/p\u003e\n\n\u003cp\u003e\u003ca href=\"/muiscript/items/b4ca1773580317e7112e/patches/62814\"\u003eシンタックスハイライトの修正\u003c/a\u003e by \u003ca href=\"/alt\"\u003ealt\u003c/a\u003e 2019/01/30 18:02\u003c/p\u003e\n","updated_at":"2019-02-16T11:58:08+09:00","user":{"description":"Go / Typescript / Ruby / shell script","facebook_id":"","followees_count":5,"followers_count":12,"github_login_name":"muiscript","id":"muiscript","items_count":14,"linkedin_id":"","location":"","name":"","organization":"","permanent_id":159260,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/159260/profile-images/1539056316","team_only":false,"twitter_screen_name":null,"website_url":""}},{"body":"追加のpropsを渡すには普通に子コンポーネントとして書く、つまりchildrenを使うといいです。\n\n```\n\u003cRoute exact path='/members'\u003e\n    \u003cFriendList handleVote={this.handleVote} /\u003e\n\u003c/Route\u003e\n```\n","created_at":"2018-10-15T23:13:13+09:00","id":"c41321e4d3cfe95fabc2","rendered_body":"\u003cp\u003e追加のpropsを渡すには普通に子コンポーネントとして書く、つまりchildrenを使うといいです。\u003c/p\u003e\n\n\u003cdiv class=\"code-frame\" data-lang=\"text\"\u003e\u003cdiv class=\"highlight\"\u003e\u003cpre\u003e\u0026lt;Route exact path='/members'\u0026gt;\n    \u0026lt;FriendList handleVote={this.handleVote} /\u0026gt;\n\u0026lt;/Route\u0026gt;\n\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e\n","updated_at":"2018-10-15T23:13:13+09:00","user":{"description":null,"facebook_id":null,"followees_count":0,"followers_count":1,"github_login_name":"soyu-fujiwara","id":"kisaragi","items_count":0,"linkedin_id":null,"location":null,"name":"","organization":null,"permanent_id":71485,"profile_image_url":"https://qiita-image-store.s3.amazonaws.com/0/71485/profile-images/1473698842","team_only":false,"twitter_screen_name":null,"website_url":null}},{"body":"demo is gone.\n","created_at":"2018-10-12T10:45:55+09:00","id":"66eeb0726a57879b0e94","rendered_body":"\u003cp\u003edemo is gone.\u003c/p\u003e\n","updated_at":"2018-10-12T10:45:55+09:00","user":{"description":null,"facebook_id":null,"followees_count":10,"followers_count":6,"github_login_name":null,"id":"nakawankuma","items_count":0,"linkedin_id":null,"location":null,"name":"","organization":null,"permanent_id":244710,"profile_image_url":"https://lh3.googleusercontent.com/-2wMvgPNY5YY/AAAAAAAAAAI/AAAAAAAABRM/cTbJDoQb8hQ/photo.jpg?sz=50","team_only":false,"twitter_screen_name":null,"website_url":null}},{"body":"こんにちは。NavLinkがconnect併用で動かなくてハマっていたらいたらこのページにたどり着きました。おかげさまで解決しました。ありがとうございます。\n\nところで、\n\n\u003e - storeとルーティングのデータを同期したり、storeからルーティングを操作したりする\n\u003e - dispatchによってページ遷移をする\n\u003e - ページ遷移についてもRedux devtoolのtime travel debuggingをする\n\nこちらについてですが、[Redux integration](https://reacttraining.com/react-router/web/guides/redux-integration)には、\n\n\u003e - dispatchによってページ遷移をする\n\nhistory objectをactionに渡し、それをthunkやsagaで使用すればできる。\n-\u003e なので、できない、というのは違うように思います。\n\n\u003e - storeとルーティングのデータを同期したり、storeからルーティングを操作したりする\n\nlocationはpropsとしてコンポーネントに渡すことができるため、storeに入れる必要はない。\n-\u003e そもそもredux binding必要ないよねという趣旨かと\n参考: [location](https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/api/location.md)\n\n\n\u003e - ページ遷移についてもRedux devtoolのtime travel debuggingをする\n\nすいません、time travel debuggingについて知らないので、なにが書いてあるのか正確にはわからないですが、こちらもそもそもstoreとrouteを同期しないほうがよいといった趣旨かと思います。\n\n公式ページの全体の趣旨としては、\n**そもそもroute情報をstoreに入れなくてもよい -\u003e redux用のパッケージは不要**\nということかと思っていますが、どうでしょうか。\n\nちなみにredux binidingのパッケージはreact-router-reduxからconnected-react-routerに変更になっています。\n","created_at":"2018-10-11T23:18:35+09:00","id":"9fad1d3960df5f314777","rendered_body":"\u003cp\u003eこんにちは。NavLinkがconnect併用で動かなくてハマっていたらいたらこのページにたどり着きました。おかげさまで解決しました。ありがとうございます。\u003c/p\u003e\n\n\u003cp\u003eところで、\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003estoreとルーティングのデータを同期したり、storeからルーティングを操作したりする\u003c/li\u003e\n\u003cli\u003edispatchによってページ遷移をする\u003c/li\u003e\n\u003cli\u003eページ遷移についてもRedux devtoolのtime travel debuggingをする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eこちらについてですが、\u003ca href=\"https://reacttraining.com/react-router/web/guides/redux-integration\" rel=\"nofollow noopener\" target=\"_blank\"\u003eRedux integration\u003c/a\u003eには、\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003edispatchによってページ遷移をする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003ehistory objectをactionに渡し、それをthunkやsagaで使用すればできる。\u003cbr\u003e\n-\u0026gt; なので、できない、というのは違うように思います。\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003estoreとルーティングのデータを同期したり、storeからルーティングを操作したりする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003elocationはpropsとしてコンポーネントに渡すことができるため、storeに入れる必要はない。\u003cbr\u003e\n-\u0026gt; そもそもredux binding必要ないよねという趣旨かと\u003cbr\u003e\n参考: \u003ca href=\"https://github.com/ReactTraining/react-router/blob/master/packages/react-router/docs/api/location.md\" rel=\"nofollow noopener\" target=\"_blank\"\u003elocation\u003c/a\u003e\u003c/p\u003e\n\n\u003cblockquote\u003e\n\u003cul\u003e\n\u003cli\u003eページ遷移についてもRedux devtoolのtime travel debuggingをする\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/blockquote\u003e\n\n\u003cp\u003eすいません、time travel debuggingについて知らないので、なにが書いてあるのか正確にはわからないですが、こちらもそもそもstoreとrouteを同期しないほうがよいといった趣旨かと思います。\u003c/p\u003e\n\n\u003cp\u003e公式ページの全体の趣旨としては、\u003cbr\u003e\n\u003cstrong\u003eそもそもroute情報をstoreに入れなくてもよい -\u0026gt; redux用のパッケージは不要\u003c/strong\u003e\u003cbr\u003e\nということかと思っていますが、どうでしょうか。\u003c/p\u003e\n\n\u003cp\u003eちなみにredux binidingのパッケージはreact-router-reduxからconnected-react-routerに変更になっています。\u003c/p\u003e\n","updated_at":"2018-10-11T23:18:35+09:00","user":{"description":"","facebook_id":"","followees_count":0,"followers_count":1,"github_login_name":"yucatio","id":"yucatio","items_count":0,"linkedin_id":"","location":"千葉県","name":"Yuka Saito","organization":"","permanent_id":288329,"profile_image_url":"https://avatars0.githubusercontent.com/u/16703257?v=4","team_only":false,"twitter_screen_name":null,"website_url":"http://yucatio.hatenablog.com/"}}]